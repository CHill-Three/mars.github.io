.data #data section
blankSpace: .asciiz " "
.text #code section
main:
li $t0, 0 #Initialize $t0 to 0. This will be your counter (index).
li $t1, 10 # Initialize $t1 to 10. This will be your counter end point.
li $t2, 0 # Initialize $t2 to 10. This will be your counter end point (2nd).

jal increaseReg # Jumps into 1st loop (Increasing)

increaseReg:
li $v0, 5
syscall # Syscall 5 Command (Input from Keyboard)

addi $sp, $sp, -4
sw $v0, 0($sp) # Adds (Input from Keyboard) into Stack

addi $t0, $t0, 1 # increment  counter (index)
bne $t0, $t1 increaseReg # restart loop
jal decreaseReg

decreaseReg:

lw $v0, 0($sp) # Gets (Input from Keyboard) from Stack
addi $sp, $sp, 4

move $t3, $v0

li $v0, 1 # Syscall 1 Command - Displaying Internal Value
move $a0, $t3
syscall

# Displaying Phrase 2
li $v0, 4
la $a0, blankSpace
syscall

addi $t1, $t1, -1 # increment  counter (index)
bne $t1, $t2 decreaseReg # restart loop
jal Done

Done:
li $v0, 10
syscall # terminate the program