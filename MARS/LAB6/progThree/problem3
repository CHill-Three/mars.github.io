.data #data section
blankSpace: .asciiz " "

.text #code section
main:
li $t0,0 #Initialize $t0 to 0. This will be your counter (index).
li $t1, 10 # Initialize $t1 to 0xa. This will be your counter end point.
addi $t2, $zero, 0x10010000 #Load  DM[0x10010000] – the first data memory address

#Implementing Syscall 5
li $v0,5
syscall

jal firstLoop # Call Load Numbers Loop Method

#Load Numbers Loop Method
firstLoop:
move $t3,$v0 # Move $v0 into temp register $t3
sw $t3, 0($t2) # store current result

jal secondLoop # Call Read Numbers Loop Method

move $v0,$t3 # Move $t3 back into temp register $v0

addi $t2, $t2, 4 # increment store address
addi $v0, $v0, 1 # ++i (Increment the number by 1)
addi $t0,$t0, 1 # increment  counter (index)
bne $t0, $t1 firstLoop # restart loop
j Done

secondLoop:
# Displaying Internal Values
li $v0, 1
move $a0, $t3
syscall

# Displaying Space
li $a0, 32
li $v0, 11  # syscall number for printing character
syscall

jr $ra

Done: 
li $v0 10 # terminate the program
syscall
